# в основном отсюда https://habr.com/ru/post/329264/
dist:     trusty    # используем Ubuntu 14.04 Trusty Tahr (а не 12.02 Precise Pangolin)
sudo:     required  # используем Virtual Machine (а не Docker container)

language: cpp

os: linux

before-script:
  - mkdir build
  - cd build
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p external/cmake
      pushd external/cmake
      wget https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.sh
      chmod +x cmake-*-Linux-x86_64.sh
      ./cmake-*-Linux-x86_64.sh --exclude-subdir --skip-license
      export PATH="${PWD}/bin:$PATH"
      popd
    else
      if ! brew ls --version cmake &>/dev/null; then brew update; brew install cmake; fi
    fi
      
matrix:
  include:
  #
  # CppCheck
  #
  - os: linux
    env:
      - TEST="CppCheck"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
    script:
      - cmake -DENABLE_CPPCHECK=ON -DCMAKE_CXX_COMPILER="g++-6" ..
      - make
      - make check
  #
  # Valgrind
  #
  - os: linux
    env:
      - TEST="Valgrind"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-6
          - g++-6
          - valgrind
    script:
      - cmake -DCMAKE_CXX_COMPILER="g++-6" ..
      - make
      - ctest -T memcheck
  - python: '3.5'
  - python: '3.7'
    env: BUILD_DOCS=1
  - python: pypy3.5

  install:
  - python3 --version
  - $CXX --version
  - pip install --upgrade pip gcovr
  - make setup-dev
script:
    # скрипт сборки и тестирования проекта:
    - rm -r build
    - mkdir build
    - cmake -B build &&
    - cd build &&
    - make tests_gcovr_parall &&
    - make tests_gcovr_cons &&

    - make main_consistent &&
    - make main_parallel &&

    - cppcheck ../*.c &&
    #тесты
    - valgrind --trace-children=yes --leak-check=full --show-leak-kinds=all --child-silent-after-fork=yes ./tests_gcovr_cons &&
    - valgrind --trace-children=yes --leak-check=full --show-leak-kinds=all --child-silent-after-fork=yes ./tests_gcovr_parall &&

    - gcovr -r .. .

    - cd ..

    # стресс тест
    - gcc generate_long_input.c -o gen_rand &&
    - ./gen_rand &&
    - echo "consistent:" > temp_output && ./build/main_consistent long_input >> temp_output &&
    - echo "parallel:" >> temp_output && ./build/main_parallel long_input >> temp_output &&
    - rm long_input
    - cat temp_output | grep time -B1 && echo "----" && cat temp_output | grep output | awk '{print $2,$3}' | tr '\n' ' '| awk '$1 == $3 && $2 == $4 { print "----\nРезультат работы обеих программ одинаков"}'
    - rm temp_output
